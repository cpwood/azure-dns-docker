name: build our image

on:
  push:
    branches: main

env:
  DLL: DynamicAzureDns.dll
  TAG: cpwood/azure-dns-docker:latest
  SLN: /src/DynamicAzureDns.sln

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: create publish folder
        run: mkdir publish
      - name: build amd64
        run: docker run -v ${{ github.workspace }}/src:/src -v ${{ github.workspace }}/publish:/publish mcr.microsoft.com/dotnet/core/sdk:3.1 /bin/bash -c "dotnet restore ${{ env.SLN }} -r linux-musl-x64; dotnet publish ${{ env.SLN }} -c release -o /publish/linux/amd64 -r linux-musl-x64 --self-contained false --no-restore"
      - name: build arm32
        run: docker run -v ${{ github.workspace }}/src:/src -v ${{ github.workspace }}/publish:/publish mcr.microsoft.com/dotnet/core/sdk:3.1 /bin/bash -c "dotnet restore ${{ env.SLN }} -r linux-arm; dotnet publish ${{ env.SLN }} -c release -o /publish/linux/arm/v7 -r linux-arm --self-contained false --no-restore"
      - name: build arm64
        run: docker run -v ${{ github.workspace }}/src:/src -v ${{ github.workspace }}/publish:/publish mcr.microsoft.com/dotnet/core/sdk:3.1 /bin/bash -c "dotnet restore ${{ env.SLN }} -r linux-musl-arm64; dotnet publish ${{ env.SLN }} -c release -o /publish/linux/arm64 -r linux-musl-arm64 --self-contained false --no-restore"
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - name: login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u cpwood --password-stdin
      - name: build the image
        run: |
          docker buildx build \
            --push \
            --file src/Dockerfile \
            --tag ${{ env.TAG }} \
            --build-arg DLL=${{ env.DLL }} \
            --platform linux/amd64,linux/arm/v7,linux/arm64 .